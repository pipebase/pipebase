name: consume_sqs
dependencies:
  - name: pipebase
    version: 0.1.2
    modules: ["pipebase::prelude::*"]
  - name: pipesqs
    git: https://github.com/pipebase/pipebase.git
    package: pipesqs
    modules: ["pipesqs::*"]
pipes:
  - name: consume_sqs
    ty: Poller
    config:
      ty: SqsMessageReceiverConfig
      path: catalogs/sqs_msg_receiver.yml
    output:
      ExternalObjects: SqsMessage
  - name: message_conversion
    ty: Mapper
    config:
      ty: ConversionConfig
    output:
      Objects: FilterableMessage
    upstreams: [consume_sqs]
  - name: filter_no_topic
    ty: Mapper
    config:
      ty: FilterMapConfig
    output:
      Objects: FilterableMessage
    upstreams: [message_conversion]
  - name: project_custom_message
    ty: Mapper
    config:
      ty: ProjectionConfig
    output:
      Objects: CustomMessage
    upstreams: [filter_no_topic]
  - name: read_iterator
    ty: Streamer
    config:
      ty: IteratorReaderConfig
    output:
      Object: CustomMessage
    upstreams: [project_custom_message]
  - name: print_msg
    ty: Exporter
    config:
      ty: PrinterConfig
    upstreams: [read_iterator]
objects:
  - ty: FilterableMessage
    metas:
      - derives: [Clone, Debug, Convert, Filter]
      - filter:
          predicate: m.attributes.has_attribute("Topic", "String")
          alias: m
      - convert:
          input: 
            Object: SqsMessage
    fields:
      - name: body
        metas:
          - convert:
              from: body
        ty: String
      - name: attributes
        metas:
          - convert:
              from: message_attributes
        ty: 
          ExternalObject: SqsMessageAttributes
  - ty: CustomMessage
    metas: 
      - derives: [Clone, Debug, Project]
      - project:
          input: 
            Object: FilterableMessage
    fields:
      - name: body
        metas: 
          - project:
              from: body
        ty: String
      - name: topic
        metas:
          - project:
              expr: m.attributes.get_attribute_string_value("Topic", "String")
              alias: m
        ty: 
          Option:
            ty: String

